upstream hedgedoc {
    server localhost:3000;
}

server {
    listen       80;
    listen       [::]:80;
    server_name  {{ hedgedoc_domain }};

    access_log   /var/log/nginx/{{ hedgedoc_domain }}/access.log main;
    error_log    /var/log/nginx/{{ hedgedoc_domain }}/error.log;

    include snippets/letsencrypt.conf;

    location / {
        rewrite ^(.*) https://{{ hedgedoc_domain }}$1 permanent;
    }
}

server {
    listen       443 ssl http2;
    listen       [::]:443 ssl http2;
    server_name  {{ hedgedoc_domain }};

    access_log   /var/log/nginx/{{ hedgedoc_domain }}/access.log main;
    error_log    /var/log/nginx/{{ hedgedoc_domain }}/error.log;

    ssl_certificate      /etc/letsencrypt/live/{{ hedgedoc_domain }}/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/{{ hedgedoc_domain }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ hedgedoc_domain }}/chain.pem;

    location / {
       proxy_pass http://hedgedoc;
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /socket.io/ {
       proxy_pass http://hedgedoc;
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
   }
}
